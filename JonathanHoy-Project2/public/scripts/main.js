(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

// CARD LIST
var cardArray = ["bulbasaur", "bulbasaur", "charmander", "charmander", "squirtle", "squirtle", "pikachu", "pikachu"];

// SHUFFLE FUNCTION
var shuffle = function shuffle(array) {
	var currentIndex = array.length,
	    temporaryValue,
	    randomIndex;
	// While there remain elements to shuffle...
	while (0 !== currentIndex) {
		// Pick a remaining element...
		randomIndex = Math.floor(Math.random() * currentIndex);
		currentIndex -= 1;
		// And swap it with the current element.
		temporaryValue = array[currentIndex];
		array[currentIndex] = array[randomIndex];
		array[randomIndex] = temporaryValue;
	}
	return array;
};

// SHUFFLING AND PRINTING ARRAY
var shuffleCards = function shuffleCards(array) {
	var shuffledCardArray = shuffle(array);
	var shuffledCardList = '';
	for (var i = 0; i < shuffledCardArray.length; i++) {
		shuffledCardList += "<li class=\"card\"><div class=\"card\"><div class=\"front\"></div><div class=\"back " + shuffledCardArray[i] + "\"><img src=\"dev/assets/" + shuffledCardArray[i] + ".png\" alt=\"A cute picture of " + shuffledCardArray[i] + ".\"></div></div></li>";
	};
	$('.cards').html(shuffledCardList);
	console.log(shuffledCardArray); // to cheat and see the cards
};

// FLIPPING CARDS
var cardFlip = function cardFlip(array) {
	$('.front').on('click', function () {
		if (!$('.front').hasClass('freeze')) {
			$(this).toggleClass('flip');
			$(this).next().toggleClass('flip');
			if ($(this).next().hasClass('bulbasaur')) {
				flippedCards.push('bulbasaur');
			} else if ($(this).next().hasClass('charmander')) {
				flippedCards.push('charmander');
			} else if ($(this).next().hasClass('squirtle')) {
				flippedCards.push('squirtle');
			} else if ($(this).next().hasClass('pikachu')) {
				flippedCards.push('pikachu');
			} else if ($(this).next().hasClass('eevee')) {
				flippedCards.push('eevee');
			} else if ($(this).next().hasClass('dratini')) {
				flippedCards.push('dratini');
			};
			compareCards(array);
		};
	});
};

// MATCHING LOGIC
var flippedCards = [];

var compareCards = function compareCards(array) {
	if (flippedCards.length === 2 && flippedCards[0] !== flippedCards[1]) {
		addToCount();
		flippedCards.pop();
		flippedCards.pop();
		$('.front').css('pointer-events', 'none');
		setTimeout(function () {
			$('.front').removeClass('flip');
			$('.back').removeClass('flip');
			$('.front').css('pointer-events', 'auto');
		}, 750);
	} else if (flippedCards.length === 2 && flippedCards[0] === flippedCards[1]) {
		addToCount();
		flippedCards.pop();
		flippedCards.pop();
		$('.back.flip').addClass('matched');
		$('.front.flip').addClass('matched');
		winCount.push('matched');
		winMessage(array);
	};
};

var addToCount = function addToCount() {
	var newVal = parseInt($('.count').text()) + 1;
	if (!$('.count').hasClass('freeze')) {
		$('.count').text(newVal);
	};
};

// WINNING
var winCount = [];
var winVerified = '';

var winMessage = function winMessage(array) {
	var tries = parseInt($('.count').text());
	var pairs = array.length / 2;
	setTimeout(function () {
		if (winCount.length === array.length / 2) {
			winVerified = 'confirmed';
			winCount = winCount.filter(function (match) {
				if (match !== 'matched') {
					return true;
				};
			});
			if (tries === pairs) {
				alert("Congratulations! You won in " + $('.count').text() + " tries! A perfect round! You are the best!!");
			} else {
				alert("Congratulations! You won in " + $('.count').text() + " tries! Select a difficulty to play again!");
			};
		};
	}, 300);
};

// DIFFICULTY
var difficultyCheck = [];

var setHardMode = function setHardMode() {
	if (cardArray.length === 8) {
		cardArray.push('eevee', 'eevee', 'dratini', 'dratini');
	}
	shuffleCards(cardArray);
	cardFlip(cardArray);
};

var setNormalMode = function setNormalMode() {
	var normalModeArray = cardArray.filter(function (pokemon) {
		if (pokemon !== 'dratini' && pokemon !== 'eevee') {
			return true;
		};
	});
	shuffleCards(normalModeArray);
	cardFlip(normalModeArray);
};

var switchToHardMode = function switchToHardMode() {
	$('.hardMode').on('click', function () {
		difficultyCheck.push('hardMode');
		$('.cards').addClass('hardGrid');
		setHardMode();
		winCount = winCount.filter(function (match) {
			if (match !== 'matched') {
				return true;
			};
		});
	});
};

var switchToNormalMode = function switchToNormalMode() {
	$('.normalMode').on('click', function () {
		difficultyCheck.pop();
		$('.cards').removeClass('hardGrid');
		setNormalMode();
		winCount = winCount.filter(function (match) {
			if (match !== 'matched') {
				return true;
			};
			winMessage(normalModeArray);
		});
	});
};

// TIMER
var normalSeconds = 15;
var hardSeconds = 30;

var setNormalTimer = function setNormalTimer() {
	setNormalMode();
	winCount = winCount.filter(function (match) {
		if (match !== 'matched') {
			return true;
		};
	});
	var countdown = window.setInterval(function () {
		$('.displayTimer').text(normalSeconds);
		normalSeconds--;
		$('a').on('click', function () {
			window.clearInterval(countdown);
		});
		if (winVerified === 'confirmed') {
			window.clearInterval(countdown);
			winMessage(normalModeArray);
		};
		if (normalSeconds < 0) {
			window.clearInterval(countdown);
			$('.count, .front').addClass('freeze');
		};
	}, 1000);
};

$('.normalTimer').on('click', function () {
	if (difficultyCheck[0] === 'hardMode') {
		alert('Please select normal difficulty before starting the normal mode timer!');
	} else {
		setNormalTimer();
	};
});

var setHardTimer = function setHardTimer() {
	setHardMode();
	winCount = winCount.filter(function (match) {
		if (match !== 'matched') {
			return true;
		};
	});
	var countdown = window.setInterval(function () {
		$('.displayTimer').text(hardSeconds);
		hardSeconds--;
		$('a').on('click', function () {
			window.clearInterval(countdown);
		});
		if (winVerified === 'confirmed') {
			window.clearInterval(countdown);
			winMessage(cardArray);
		};
		if (hardSeconds < 0) {
			window.clearInterval(countdown);
			$('.count, .front').addClass('freeze');
		};
	}, 1000);
};

$('.hardTimer').on('click', function () {
	if (difficultyCheck[0] !== 'hardMode') {
		alert('Please select hard difficulty before starting the hard mode timer!');
	} else {
		setHardTimer();
	};
});

// RESET
$('a').on('click', function () {
	$('.count').text("0");
	$('.count').removeClass('freeze');
	$('aside').addClass('hidden');
	$('.displayTimer').text('');
	normalSeconds = 15;
	hardSeconds = 30;
	if (flippedCards.length === 2) {
		flippedCards.pop();
		flippedCards.pop();
	} else if (flippedCards.length === 1) {
		flippedCards.pop();
	};
});

// MENU
$('header i').on('click', function () {
	$('aside').toggleClass("hidden");
});

// INSTRUCTIONS
$('.instructionButton, .instructions i').on('click', function () {
	$('.instructions').toggleClass('hidden');
});

// INIT
var init = function init() {
	shuffleCards(cardArray);
	cardFlip(cardArray);
	switchToHardMode();
	switchToNormalMode();
};

// DOCUMENT READY
$(function () {
	init();
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
